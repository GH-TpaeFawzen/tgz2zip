#!/usr/bin/env bash

# Fail if return code isn't 0. 
# Parameter 1 is the return code
# Para. 2 is text to display on failure.
check_errs() {
  if [ "${1}" -ne "0" ]; then
    echo "ERROR # ${1} : ${2}"
    exit ${1}
  fi
}

normalize() {
	dir=$1
	dir=`dirname $dir`
	fname=`basename $1`
	echo "$dir/$fname"
}

while getopts :h OPTION
do
         case $OPTION in
          h) echo "tgz2zip wonderland.tgz [middle-earth.tar.bzip2]" >&2
             exit 0
             ;;
          \?) echo "Illegal option -- $OPTARG" >&2
             exit -1
            ;;
         esac
done

for infile in "$@"
do
    unpackdir="$(mktemp -d -t 2zip)"
	trap "rm -rf '$unpackdir'" EXIT INT HUP TERM

	case "$infile" in
	     *.tgz)
	        tar -C "$unpackdir" -xzf "$infile" >/dev/null
			check_errs $?
			outfile=${infile%.tgz}  
	        ;;
		*.tar.gz)
			tar -C "$unpackdir" -xzf "$infile" >/dev/null
			check_errs $?
			outfile= ${infile%.tar.gz}
			;;
	    *.tar)
	        tar -C "$unpackdir" -xf "$infile" >/dev/null
			check_errs $?
			outfile=${infile%.tar}
	        ;;
	    *.tar.bzip2)
	        tar -C "$unpackdir" -xjf "$infile" >/dev/null 
			check_errs $?
			outfile= ${infile%.tar.bzip2}
	        ;;
	    *)
	        echo "Unrecognized input format" >&2
	        exit -1
	        ;;
	esac
	outfile=`normalize $outfile`
	outfile="${outfile}.zip"
	outdir=`dirname $outfile`
	(cd "$unpackdir" && zip -r "$outfile" . > /dev/null)
	check_errs $?
	rm $infile
	check_errs $?
	rm -rf "$unpackdir"
done
